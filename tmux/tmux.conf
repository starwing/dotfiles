# vim: nu et fdc=2 fdm=marker fmr={,}

# General {

# set prefix
set -g prefix "`"
unbind C-b

bind "`"    send-prefix
bind BSpace last-window

# don't rename windows automatically
set -g allow-rename off

# Scrollback/History limit
set -g history-limit 10000

# Allow xterm titles in terminal window, terminal scrolling with
# scrollbar, and setting overrides of C-Up, C-Down, C-Left, C-Right
#set -g terminal-overrides "xterm*:XT:smcup@:rmcup@:kUP5=\eOA:kDN5=\eOB:kLFT5=\eOD:kRIT5=\eOC"

# Set ability to capture on start and restore on exit window data when
# runing an application
setw -g alternate-screen on

# Lower escape-timing from 500ms to 50ms for quicker response to
# scroll-buffer access
set -s escape-time 10

# Index Start
set -g base-index 1

# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# reload config file (change file location to your the tmux.conf you want to use)
bind R source-file ~/.tmux.conf
bind r refresh-client

# synchronize panes
bind-key S set-window-option synchronize-panes\; \
 display-message "synchronize-panes is now #{?pane_synchronized,on,off}"

# fix vim redraw issue
set -as terminal-overrides '*:indn@'

# loud or quiet?
set  -g visual-activity  off
set  -g visual-bell      off
set  -g visual-silence   off
setw -g monitor-activity off
set  -g bell-action      none

# Use the xterm-256color terminal
#set -s default-terminal "screen-256color"
#set -s default-terminal "tmux-256color"

# use RGB truecolor
#set -as terminal-features ',xterm-256color:RGB'

# Apply Tc
set -as terminal-overrides ",xterm*:Tc:smso=[3m"
#set -as terminal-overrides ",screen*:Tc:smso=[3m"

# set clipboard
set -g set-clipboard on


# }
# vi mode {

# Use Vi mode
setw -g mode-keys vi
set -g status-keys vi

# vi like copying
bind "v" copy-mode \; send-keys -X begin-selection
bind -T copy-mode-vi v send-keys -X begin-selection
#bind -T copy-mode-vi y send-keys -X copy-pipe "$XCLIP"
bind -T copy-mode-vi Y send-keys -X copy-end-of-line
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "safe-reattach-to-user-namespace pbcopy"


# use p to paste
unbind p
bind p paste-buffer

# switch panes using Alt-arrow without prefix
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Window Cycle/Swap
bind e previous-window
bind f next-window
bind E swap-window -t -1
bind F swap-window -t +1

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n 'M-h' if-shell "$is_vim" "send-keys ,h"  "select-pane -L"
bind -n 'M-j' if-shell "$is_vim" "send-keys ,j"  "select-pane -D"
bind -n 'M-k' if-shell "$is_vim" "send-keys ,k"  "select-pane -U"
bind -n 'M-l' if-shell "$is_vim" "send-keys ,l"  "select-pane -R"

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R


# }
# mouse mode {

# mouse mode before tmux 2.1
## Enable mouse control (clickable windows, panes, resizable panes)
#set -g mouse-select-window on
#set -g mouse-select-pane on
#set -g mouse-resize-pane on

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# }
# themes {

# fork from github.com/jimeh/tmux-themepack
#source-file "$HOME/.tmux/basic.tmuxtheme"
source-file "$HOME/.tmux/powerline.tmuxtheme"

# }
# List of plugins {

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

#set -g @plugin 'tmux-plugins/tmux-copycat'
#set -g @plugin 'tmux-plugins/tmux-yank'
#set -g @plugin 'nhdaly/tmux-better-mouse-mode'
#
## Configure tmux-yank
#set -g @yank_action 'copy-pipe'

# set -g @plugin 'jimeh/tmux-themepack'
# set -g @themepack 'powerline/block/yellow'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# tmux-resurrect {

set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @resurrect-save-bash-history 'on'
set -g @resurrect-capture-pane-contents 'on'

# restore vim/neovim session
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-strategy-nvim 'session'
# set -g @resurrect-save 'S'
# set -g @resurrect-restore 'R'

# }
# tmux-continum {

set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'

# }

# Initialize TMUX plugin manager (keep this line at the very bottom of
# tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# }

